minikube start --extra-config=kubeadm.ignore-preflight-errors=NumCPU --force --cpus=1

Open powershell as admin
1. Install choclatey
   https://chocolatey.org/install
2. Open cmd as admin
	> choco install kubernetes-cli
3. Verify installation
	> kubectl version --client
4. Create a directory .kube
	> mkdir .kube
5. Create a config file in .kube folder without in extension
6. Now install MiniKube
	> choco install minikube
7. Start minikube
	> minikube start
8. Check out the minikube status
	> minikube status
9. Start dashboard
	> minikube dashboard



	Get the YAML configured file : https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-rc7/aio/deploy/recommended.yaml
Enter Commands : 
> kubectl apply –f .\recommended.yaml
> Kubectl.exe get –f .\recommended.yaml.txt
> ((kubectl -n kube-system describe secret default | Select-String "token:") -split " +")[1]
Copy the generated token
> kubectl proxy
Open : http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/





-- -- -- --- -- -- -- -- --- -- -- -- -- -- --


Create a Deployment
1. Use the kubectl create command to create a Deployment that manages a Pod. The Pod runs a Container based on the provided Docker image.

> kubectl create deployment hello-node --image=k8s.gcr.io/echoserver:1.4

2.View the Deployment:
> kubectl get deployments

3.View the Pod:
> kubectl get pods

4.View cluster events:
> kubectl get events

5.View the kubectl configuration:
> kubectl config view



Create a Service
1.Expose the Pod to the public internet using the kubectl expose command:
> kubectl expose deployment hello-node --type=LoadBalancer --port=8080

2.View the Service you created:
> kubectl get services

3.Run the following command:
> minikube service hello-node

Clean up
Now you can clean up the resources you created in your cluster:
> kubectl delete service hello-node
> kubectl delete deployment hello-node

Stop the Minikube virtual machine (VM):
> minikube stop

Delete the Minikube VM:
> minikube delete

Get details of your Deployment:
> kubectl describe deployments


-- -- --- -- -- --- -- -- -- -- -- -- -- -- -- 

# 1. Create the Deployment by running the following command:
# > kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml

# 2. Run to check if the Deployment was created.
# > kubectl get deployments

# When you inspect the Deployments in your cluster, the following fields are displayed:

# NAME lists the names of the Deployments in the namespace.
# READY displays how many replicas of the application are available to your users. 
# It follows the pattern ready/desired.
# UP-TO-DATE displays the number of replicas that have been updated to achieve the desired state.
# AVAILABLE displays how many replicas of the application are available to your users.
# AGE displays the amount of time that the application has been running.

# 3. To see the Deployment rollout status, run 
# > kubectl rollout status deployment/nginx-deployment

# Run the kubectl get deployments again a few seconds later.

# 4. To see the ReplicaSet (rs) created by the Deployment, run
# > kubectl get rs


NOTE : kubectl describe deployments

ReplicaSet output shows the following fields:

# NAME lists the names of the ReplicaSets in the namespace.
# DESIRED displays the desired number of replicas of the application, 
# which you define when you create the Deployment. This is the desired state.
# CURRENT displays how many replicas are currently running.
# READY displays how many replicas of the application are available to your users.
# AGE displays the amount of time that the application has been running.

# 5. To see the labels automatically generated for each Pod, run
# > kubectl get pods --show-labels